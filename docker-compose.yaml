services:
  db:
    build:
      context: ./db
    container_name: ${DB_IMG_NAME}
    environment:
      TZ: "Europe/Kiev"
      LANG: "en_US.utf8"
      POSTGRES_USER: ${PDB_USER}
      POSTGRES_PASSWORD: ${PDB_PASS}
      POSTGRES_DATABASE: ${RDB}
      POSTGRES_DATESTYLE: "ISO,MDY"
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
        compress: "true"
    volumes:
      - ./db/data/postgres_data:${DB_DATA}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -U ${PDB_USER} -d ${RDB}"]
      interval: "20s"
      timeout: "10s"
      retries: 5
      start_period: "60s"
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always

  redis:
    image: redis:${RD_IMG_VER}
    container_name: ${RD_IMG_NAME}
    environment:
      TZ: "Europe/Kiev"
      LANG: "en_US.utf8"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: "10s"
      timeout: "5s"
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
        compress: "true"
    networks:
      - app-network
    restart: always

  app:
    build:
      context: ./app
    container_name: ${APP_IMG_NAME}
    environment:
      TZ: "Europe/Kiev"
      LANG: "en_US.utf8"
      REDMINE_DB_POSTGRES: db
      REDMINE_DB_USERNAME: ${PDB_USER}
      REDMINE_DB_PASSWORD: ${PDB_PASS}
      REDMINE_DB_DATABASE: ${RDB}
      REDMINE_REDIS_URL: redis://redis:6379
    ports:
      - 80:3000
    volumes:
      - ./app/redmine_plugins:${APP_PLUGINS}
      - ./app/redmine_themes:${APP_THEMES}
      - ./app/data/redmine_data:${APP_DATA}
      - ./app/redmine_repo:${APP_REPO}
      - ./app/redmine_config/configuration.yml:${REDMINE_CONFIG}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: "30s"
      timeout: "10s"
      retries: 5
    depends_on:
      - db
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "2"
        compress: "true"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
